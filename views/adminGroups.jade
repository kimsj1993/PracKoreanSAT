doctype html
html
  head
    meta=(charset="utf-8")
    link(rel='stylesheet' type ='text/css' href='/css/header.style.css')
    link(rel='stylesheet' type ='text/css' href='/css/listening_set.style.css')
    script(src="//code.jquery.com/jquery-1.12.3.js")
    
    //validate 기본
    script(src ="http://ajax.aspnetcdn.com/ajax/jQuery/jquery-2.1.4.min.js")
    script(src ="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.15.0/jquery.validate.min.js")
    //validate 외부 addMethod가져오기
    script(src ="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.15.0/additional-methods.min.js")
    
    //select 테그 꾸며주는 bootstrap
    script(src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.10.0/js/bootstrap-select.min.js")
    link(rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.10.0/css/bootstrap-select.min.css")  

    //bootstrap
    link(rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css")
    script(src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js")
    //datatables    
    script(src= "https://cdn.datatables.net/1.10.12/js/jquery.dataTables.min.js")   
    link(rel='stylesheet' type ='text/css' href='https://cdn.datatables.net/1.10.12/css/jquery.dataTables.min.css')
    link(rel='stylesheet' type ='text/css' href='https://cdn.datatables.net/responsive/2.1.0/css/responsive.dataTables.min.css')
        
    link(href="/multi-select/css/multi-select.css" rel="stylesheet" type="text/css")
    script(src="/multi-select/js/jquery.multi-select.js")
    
  body
    include ./header.jade
    div(class="well well-lg" id="groupView")
      div(class="well" style="background-color: white;")
        div(class="row")
          div(class="col-sm-4 col-md-3 sidebar")    
            div(class="list-group")
              span(href="#" class="list-group-item") 그룹 / 반
                span(class="pull-right" id="slide-submenu") 
                  button("btn btn-sm" data-toggle="modal" data-target="#addModal") +
                  div(id="addModal" class="modal fade" role="dialog")
                    div(class="modal-dialog")
                      div(class="modal-content")
                        div(class="modal-header")
                          button(type="button" class="close" data-dismiss="modal") &times;
                          h4(class="modal-title") 그룹 생성
                        div(class="modal-body")
                          form(type="post" method="POST" id ="addGroup" class="valid" action="/add/group" data-id =user.user_id) 
                            div(class="form-group")
                              label 그룹명
                              input(type="text" name ="groupName" class="form-control" id="groupName")
                            div(class="form-group")
                              label 설명
                              input(type="text" name ="groupDes" class="form-control" id="groupDes")
                            div(class="form-group")
                              label 학생 선택
                              select(id='selectedStudnets' multiple='multiple' name ="studentId" class="multiSel")
                                optgroup(label="전체학생")
                                  each student in students   
                                    option(value=student.user_id)=student.name+" ("+student.personal_id+")"
                            button(type="submit" id="addBtn" class="btn btn-primary btn-sm") 생 성
                            button(type="button"  data-dismiss="modal" class="btn btn-danger btn-sm") 취소    
                                  
              a(class="list-group-item active" id="total" href="/admin/groups") 전체학생 
                span(class="badge")=students.length
              -var gradeCount;  
              if(students[0].school_grade == E)
                - gradeCount = 6
              else
                - gradeCount = 3
              -var n = 0              
              while n < gradeCount
                a(class="list-group-item" href="/admin/group/"+ ++n data-id=n id="rows"+n)=n +'학년'
                  span(class="badge")=numberStudents[n-1]
              each group in groups
                a(class="list-group-item side" href="/admin/madeGroup/"+group.user_group_id data-id=group.user_group_id id="rows"+group.user_group_id)=group.name
                  span(class="badge")=group.users
                    
          
          span(class="pull-right" id="tableSpan")
            if(gradeStudents)
              - var groupName = gradeStudents[0].personal_id.substring(0, gradeStudents[0].personal_id.indexOf("년")+1)
              h3= groupName
            else if(groupStudents)
              span(class="pull-right")
                button(class="btn btn-primary" data-target="#modify"+selectedGroup.user_group_id data-id = selectedGroup.user_group_id data-toggle="modal") 수정
                div(id="modify"+selectedGroup.user_group_id class="modal fade" role="dialog")
                  div(class="modal-dialog")
                    div(class="modal-content")
                      div(class="modal-header")
                        button(type="button" class="close" data-dismiss="modal") &times;
                        h4(class="modal-title") 그룹 수정
                      div(class="modal-body")
                        form(type="post" method="POST" id="modifyGroup" class="valid" action="/modify/group" data-teacher =user.user_id data-id =selectedGroup.user_group_id )
                          div(class="form-group")
                            label 그룹명
                            input(type="text" name="groupName" id="mGroupName" value=selectedGroup.name class="form-control")
                          div(class="form-group")  
                            label 그룹설명
                            input(type="text" name="groupDes" id="mGroupDes" value=selectedGroup.description class= "form-control")
                          div(class="form-group")
                            label 학생 선택
                            select(id='MselectedStudnets' multiple='multiple' class="multiSel" name="studentId")
                              optgroup(label="전체학생")
                                each restStudent in restStudents
                                  option(value=restStudent.user_id)=restStudent.name+" ("+restStudent.personal_id+")" 
                              optGroup(label="전체학생")
                                each groupStudent in groupStudents
                                  option(value=groupStudent.user_id selected)=groupStudent.name+" ("+groupStudent.personal_id+")"                                                        
                          button(type="submit" class="btn btn-primary btn-sm") 수 정
                          button(class="btn btn-danger btn-sm" data-dismiss="modal") 취 소  
                button(class="btn btn-danger" data-toggle="modal" data-target="#deleteGroup"+selectedGroup.user_group_id ) 삭제
                div(id="deleteGroup"+selectedGroup.user_group_id class="modal fade" role="dialog")
                  div(class="modal-dialog")
                    div(class="modal-content")
                      div(class="modal-header")
                        button(type="button" class="close" data-dismiss="modal") &times;
                        h4(class="modal-title") 그룹 삭제
                      div(class="modal-body")
                        h5=selectedGroup.name + '그룹을 삭제하시겠습니까?'
                      div(class="modal-footer")
                        button(class="btn btn-primary btn-sm" data-dismiss="modal") 취소          
                        button(id="deleteGroup" class="btn btn-danger btn-sm" data-id= selectedGroup.user_group_id) 삭제                              
              - var groupName = selectedGroup.name
              h3=groupName   
            else  
              h3 전체학생
              
            table(id="table" class="display" cellspacing="0")
              thead
                tr
                  th 이름
                  th 학번
                  th Email
              tbody
                if(gradeStudents)
                  each gradeStudent in gradeStudents
                    tr(class="tr" data-id = gradeStudent.user_id)
                      td=gradeStudent.name
                      td=gradeStudent.personal_id
                      td=gradeStudent.email
                else if(groupStudents)
                  each groupStudent in groupStudents
                    tr(class="tr" data-id = groupStudent.user_id)
                      td=groupStudent.name
                      td=groupStudent.personal_id
                      td=groupStudent.email
                        button(id=groupStudent.user_id class="pull-right deleteUser" data-id=groupStudent.user_id data-group=groupStudent.user_group_id data-toggle="modal" data-target="#myModal"+groupStudent.user_id) x
                        div(id="myModal"+groupStudent.user_id class="modal fade" role="dialog")
                          div(class="modal-dialog")
                            div(class="modal-content")
                              div(class="modal-header")
                                button(type="button" class="close" data-dismiss="modal") &times;
                                h4(class="modal-title") 유저 삭제      
                              div(class="modal-body")
                                p=groupStudent.name+"학생을 "+ selectedGroup.name + " 그룹에서 삭제하시겠습니까?"      
                              div(class="modal-footer")
                                button(type="button"  data-dismiss="modal") 취소
                                button(type="button"  id ="dele"+groupStudent.user_id  data-dismiss="modal" data-backdrop="false") 삭제
                else  
                  each student in students
                    tr(class="tr" data-id = student.user_id)
                      td=student.name
                      td=student.personal_id
                      td=student.email      

    script.
      function validate (){
        $('.valid').each(function(){
        $(this).validate({
            rules: {
              groupName : {
                required : true,
                remote: {
                  type : "POST",
                  url: "groupName/check"
                }
                
              },
              studentId : {
                needsSelection : true
              }              
            },
            messages : {
              groupName : {
                required : "그룹명을 입력해주세요",
                remote : "해당그룹은 이미 존재합니다."
              },
              studentId : {
                needsSelection : "학생을 선택해주세요"
              }
            }
          });
        });
      }
      $(document).ready(function () {
      var table = $('#table').DataTable({
        "scrollY": "450px",
        "width" : "600px",
        "scrollCollapse": true,
        "bInfo" : false      
        });
        $('#selectedStudnets').multiSelect({ selectableOptgroup: true });
        $('#MselectedStudnets').multiSelect({ selectableOptgroup: true });

    
      })
      
      //addGroup
      $(document).on("submit", "#addGroup", function(event){
        event.preventDefault();
        var teacherId = $(this).data('id');
        var groupName = $("#groupName").val();
        var groupDes = $("#groupDes").val();
        var students = $("#selectedStudnets").val();
        console.log(students);
        if(students.constructor === Array){
          var students = JSON.stringify(students)
        }
        var url = $(this).attr('action');
        $.ajax({
          url: url,
          type : 'POST',
          data : {groupName, groupDes, students, teacherId},
          success : function(data){
            var $dom = $(document.createElement("html"));
            $dom[0].innerHTML = data;
            var $groupView = $dom.find("#groupView");
            $('#groupView').html($groupView[0].innerHTML);
            $('#table').DataTable({
              "scrollY": "450px",
              "width" : "600px",
              "scrollCollapse": true,
              "bInfo" : false   
            });            
            $(".active").removeClass("active")
            var maxValue =0;
              $(".side").each(function(){
                var value = $(this).data('id');
                if(value > maxValue){
                  maxValue = value;
                }              
              })
            $("#rows"+maxValue).addClass("active")
            $('#addModal').modal('hide');
            $('body').removeClass('modal-open');
            $('.modal-backdrop').remove();
            $('#selectedStudnets').multiSelect({ selectableOptgroup: true });
            $('#MselectedStudnets').multiSelect({ selectableOptgroup: true });

            validate();



          }
        })  
      })  
      
      $(document).on("click",'a.list-group-item', function(event){
        event.preventDefault();
        var groupId = $(this).data('id')
        $.ajax({
          url: $(this).attr('href'),
          type : 'GET',
          success : function(data){
            var $dom = $(document.createElement("html"));
            $dom[0].innerHTML = data;
            var $groupView = $dom.find("#groupView");
            $('#groupView').html($groupView[0].innerHTML);
            $('#table').DataTable({
              "scrollY": "450px",
              "width" : "600px",
              "scrollCollapse": true,
              "bInfo" : false   
            });
            $('#selectedStudnets').multiSelect({ selectableOptgroup: true });
            $('#MselectedStudnets').multiSelect({ selectableOptgroup: true });

            if(groupId){
              $(".active").removeClass("active")
              $("#rows"+groupId).addClass("active")
              console.log(groupId);
            }else{
              $("#total").addClass("active")  
            }            
                        
          }
        })
        })
        
        $(document).ready(function() {
          $.validator.setDefaults({
            errorClass: 'help-block',
            highlight: function(element){  //validate 에러 발생했을때 highlight
              $(element)
                .closest('.form-group')
                .addClass('has-error')
            },
            unhighlight: function(element){ //validate 에러 해결됬을때 unhighlight
              $(element)
                .closest('.form-group')
                .removeClass('has-error')
              }
          })
          
          $.validator.addMethod("needsSelection", function (value, element) {
            var count = $(element).find('option:selected').length;
            return count > 0;
          });
          
          $('.valid').each(function(){
          $(this).validate({
              rules: {
                groupName : {
                  required : true,
                  remote: {
                    type : "POST",
                    url: "groupName/check"
                  }
                  
                },
                studentId : {
                  needsSelection : true
                }              
              },
              messages : {
                groupName : {
                  required : "그룹명을 입력해주세요",
                  remote : "해당그룹은 이미 존재합니다."
                },
                studentId : {
                  needsSelection : "학생을 선택해주세요"
                }
              }
            });
          });
        });
        
        $(document).on('change', '.multiSel', function(){
          console.log('hello-change');
          $(this).valid()
        })
        
        $(document).on("mouseover", '.tr', function(event) { 
          var user_id = $(this).data('id');
          $("#"+user_id).css('display', 'block')
        }).on("mouseout", 'tr', function(event){
          var user_id = $(this).data('id');
          $("#"+user_id).css('display', 'none')
        })
       
        $(document).on("click", '.deleteUser', function(event){
          var user_id = $(this).data('id');
          var group_id = $(this).data('group')
          var teacher_id = $(this).data('teacher')
          $("#dele"+user_id).on("click", function(event){
            $.ajax({
              url: "/delete/group/user",
              type : "POST",
              data :{user_id, group_id, teacher_id},
              success: function(data) {
                var $dom = $(document.createElement("html"));
                $dom[0].innerHTML = data;
                var $groupView = $dom.find("#groupView");
                $('#groupView').html($groupView[0].innerHTML);
                $('#table').DataTable({
                  "scrollY": "450px",
                  "width" : "600px",
                  "scrollCollapse": true,
                  "bInfo" : false   
                });
                if(group_id){
                  $(".active").removeClass("active")
                  $("#row"+group_id).addClass("active")
                  console.log(group_id);
                }else{
                $("#total").addClass("active")  
                }
                $('.modal').modal('hide');
                $('body').removeClass('modal-open');
                $('.modal-backdrop').remove();
                
                $('#selectedStudnets').multiSelect({ selectableOptgroup: true });
                validate();

              }
            })
          })
        })
        
        $(document).on("submit", "#modifyGroup", function(event){
          event.preventDefault();
          var groupId = $(this).data('id');
          var teacherId = $(this).data('teacher');
          var groupName = $("#mGroupName").val();
          var groupDec = $("#mGroupDes").val();
          optionValues = JSON.stringify($('#MselectedStudnets').val())
          
          var url = $(this).attr('action');
          $.ajax({
            url : url,
            type: 'POST',
            data : {groupId,teacherId,groupName,groupDec,optionValues},
            success : function(data){
              var $dom = $(document.createElement("html"));
              $dom[0].innerHTML = data;
              var $groupView = $dom.find("#groupView");
              $('#groupView').html($groupView[0].innerHTML);
              $('#table').DataTable({
                "scrollY": "450px",
                "width" : "600px",
                "scrollCollapse": true,
                "bInfo" : false   
              });
              if(groupId){
                $(".active").removeClass("active")
                $("#rows"+groupId).addClass("active")
                console.log(groupId);
              }else{
                $("#total").addClass("active")  
              }
              $('.modal').modal('hide');
              $('body').removeClass('modal-open');
              $('.modal-backdrop').remove();
              
              $('#selectedStudnets').multiSelect({ selectableOptgroup: true });
              $('#MselectedStudnets').multiSelect({ selectableOptgroup: true });
              validate();

            }
          })  
        })
        
        $(document).on("click", "#deleteGroup", function(event){
          var groupId = $(this).data('id')
          $.ajax({
            url : "/delete/group",
            type : "POST",
            data : {groupId},
            success : function(data){
              var $dom = $(document.createElement("html"));
              $dom[0].innerHTML = data;
              var $groupView = $dom.find("#groupView");
              $('#groupView').html($groupView[0].innerHTML);
              $('#table').DataTable({
                "scrollY": "450px",
                "width" : "600px",
                "scrollCollapse": true,
                "bInfo" : false   
              });
              $('.modal').modal('hide');
              $('body').removeClass('modal-open');
              $('.modal-backdrop').remove();
              $('#selectedStudnets').multiSelect({ selectableOptgroup: true });
              $('#MselectedStudnets').multiSelect({ selectableOptgroup: true });
              validate();


            }
          })
        })
                        
                      
                
     
    
